{"version":3,"file":"chakra-ui-theme-explorer.esm.js","sources":["../src/layouts/Layout.tsx","../src/components/Link.tsx","../src/providers/ThemeToExploreProvider.tsx","../src/components/ColorModeSwitcher.tsx","../src/components/Logo.tsx","../src/components/ThemeVisualizer/ThemeSidebar.tsx","../src/components/AutoGrid.tsx","../src/components/ThemeVisualizer/TokenItem.tsx","../src/components/ThemeVisualizer/TokenGrid.tsx","../src/components/ThemeVisualizer/ColorGrid.tsx","../src/components/ThemeVisualizer/configuration.tsx","../src/components/ThemeVisualizer/ThemeVisualizer.tsx","../src/layouts/ThemeLayout.tsx","../src/pages/NotFoundPage.tsx","../src/pages/ThemeExplorerRoute.tsx","../src/theme.ts","../src/hooks/useLocalStorage.ts","../src/utils/isBrowser.ts","../src/ThemeExplorer.tsx"],"sourcesContent":["import { BoxProps, Flex } from \"@chakra-ui/react\";\nimport * as React from \"react\";\n\nexport type LayoutProps = {\n  sidebar?: React.ReactNode;\n} & BoxProps;\n\nexport const Layout: React.FC<LayoutProps> = ({\n  sidebar,\n  children,\n  ...boxProps\n}) => {\n  return (\n    <Flex\n      pos=\"relative\"\n      align=\"stretch\"\n      minH=\"100vh\"\n      flex=\"1 0 auto\"\n      {...boxProps}\n    >\n      {sidebar}\n      <Flex flex=\"1\" w=\"auto\" overflow=\"hidden\">\n        {children}\n      </Flex>\n    </Flex>\n  );\n};\n","import * as React from \"react\";\nimport {\n  NavLink as ReactRouterLink,\n  NavLinkProps as ReactRouterLinkProps,\n} from \"react-router-dom\";\nimport {\n  Link as ChakraLink,\n  LinkProps as ChakraLinkProps,\n} from \"@chakra-ui/react\";\n\nexport type LinkProps = ReactRouterLinkProps & ChakraLinkProps;\nexport const Link: React.FC<LinkProps> = (props) => {\n  return <ChakraLink as={ReactRouterLink} {...props} />;\n};\n","import * as React from \"react\";\nimport { ChakraTheme, theme } from \"@chakra-ui/react\";\n\nconst themeToExploreContext = React.createContext<ChakraTheme>(theme);\n\nexport type ExplorerThemeProviderProps = {\n  theme: ChakraTheme;\n};\n\nexport const ThemeToExploreProvider: React.FC<ExplorerThemeProviderProps> = ({\n  theme,\n  children,\n}) => (\n  <themeToExploreContext.Provider value={theme}>\n    {children}\n  </themeToExploreContext.Provider>\n);\n\nexport function useThemeToExplore() {\n  return React.useContext(themeToExploreContext);\n}\n","import * as React from \"react\";\nimport {\n  useColorMode,\n  useColorModeValue,\n  IconButton,\n  IconButtonProps,\n} from \"@chakra-ui/react\";\nimport { FaMoon, FaSun } from \"react-icons/fa\";\n\ntype ColorModeSwitcherProps = Omit<IconButtonProps, \"aria-label\">;\n\nexport const ColorModeSwitcher: React.FC<ColorModeSwitcherProps> = (props) => {\n  const { toggleColorMode } = useColorMode();\n  const text = useColorModeValue(\"dark\", \"light\");\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"lg\"\n      variant=\"ghost\"\n      color=\"current\"\n      marginLeft=\"2\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      aria-label={`Switch to ${text} mode`}\n      {...props}\n    />\n  );\n};\n","import { chakra } from \"@chakra-ui/react\";\nimport * as React from \"react\";\nimport { PropsOf } from \"@emotion/react\";\n\nexport type LogoProps = PropsOf<typeof chakra.svg>;\nexport const Logo = (props: LogoProps) => {\n  return (\n    <chakra.svg\n      viewBox=\"0 0 257 257\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"css-2dk2qc\"\n      boxSize=\"2.5rem\"\n      {...props}\n    >\n      <rect width=\"257\" height=\"257\" rx=\"128.5\" fill=\"url(#logo)\" />\n      <path\n        d=\"M69.558 133.985l87.592-86.9891c1.636-1.6251 4.27.3525 3.165 2.377l-32.601 59.7521c-.728 1.332.237 2.958 1.755 2.958h56.34c1.815 0 2.691 2.223 1.364 3.462l-98.7278 92.142c-1.7702 1.652-4.4051-.676-2.9839-2.636l46.7357-64.473c.958-1.322.014-3.174-1.619-3.174H70.9673c-1.7851 0-2.6759-2.161-1.4093-3.419z\"\n        fill=\"#fff\"\n      />\n      <defs>\n        <linearGradient\n          id=\"logo\"\n          x1=\"128.5\"\n          x2=\"128.5\"\n          y2=\"257\"\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <stop stopColor=\"#7BCBD4\" />\n          <stop offset=\"1\" stopColor=\"#29C6B7\" />\n        </linearGradient>\n      </defs>\n    </chakra.svg>\n  );\n};\n","import * as React from \"react\";\nimport {\n  Box,\n  BoxProps,\n  chakra,\n  HStack,\n  Text,\n  List,\n  ListItem,\n  VStack,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport pick from \"lodash/pick\";\nimport startCase from \"lodash/startCase\";\nimport { Link } from \"../Link\";\nimport { useThemeToExplore } from \"../../providers/ThemeToExploreProvider\";\nimport { ColorModeSwitcher } from \"../ColorModeSwitcher\";\nimport { isObject } from \"@chakra-ui/utils\";\nimport { Logo } from \"../Logo\";\n\nexport type ThemeSidebarProps = BoxProps;\n\nexport const ThemeSidebar: React.FC<ThemeSidebarProps> = (props) => {\n  const theme = useThemeToExplore();\n  const bg = useColorModeValue(\"gray.50\", \"gray.700\");\n  const headingColor = useColorModeValue(\"gray.600\", \"gray.400\");\n  const linkColor = useColorModeValue(\"gray.600\", \"gray.200\");\n  const linkHoverBg = useColorModeValue(\"gray.50\", \"gray.700\");\n  const linkCurrentBg = useColorModeValue(\"gray.200\", \"gray.600\");\n\n  const sections = {\n    Typography: pick(theme, [\n      \"fonts\",\n      \"fontSizes\",\n      \"fontWeights\",\n      \"letterSpacings\",\n      \"lineHeights\",\n    ]),\n    Foundations: pick(theme, [\n      \"borders\",\n      \"breakpoints\",\n      \"colors\",\n      \"radii\",\n      \"shadows\",\n      \"sizes\",\n      \"space\",\n      \"transition\",\n      \"zIndices\",\n    ]),\n    Shared: pick(theme, [\"layerStyles\", \"textStyles\"]),\n    Other: pick(theme, [\"config\", \"direction\"]),\n  };\n\n  const content = Object.entries(sections).map(\n    ([sectionName, themePartial]) => {\n      const items = Object.entries(themePartial)\n        .map(([key, value]) => {\n          if (isObject(value) && !Object.keys(value).length) {\n            return null;\n          }\n\n          return (\n            <ListItem key={key}>\n              <Link\n                d=\"block\"\n                textStyle=\"sidebar-link\"\n                py=\"1\"\n                px=\"2\"\n                borderRadius=\"md\"\n                color={linkColor}\n                _hover={{ bg: linkHoverBg }}\n                sx={{\n                  \"&.active\": {\n                    bg: linkCurrentBg,\n                    fontWeight: \"bold\",\n                  },\n                }}\n                to={`/theme/${key}`}\n              >\n                {startCase(key)}\n              </Link>\n            </ListItem>\n          );\n        })\n        .filter(Boolean);\n\n      if (!items.length) {\n        return null;\n      }\n\n      return (\n        <React.Fragment key={sectionName}>\n          <chakra.h4 textStyle=\"sidebar-title\" color={headingColor}>\n            {sectionName}\n          </chakra.h4>\n          <VStack as={List} align=\"stretch\" spacing=\"1\">\n            {items}\n          </VStack>\n        </React.Fragment>\n      );\n    }\n  );\n\n  return (\n    <Box\n      align=\"flex-start\"\n      flex=\"0 0 auto\"\n      maxH=\"100vh\"\n      pos=\"sticky\"\n      top=\"0\"\n      overflowY=\"auto\"\n      as=\"nav\"\n      minW=\"60\"\n      alignSelf=\"stretch\"\n      bg={bg}\n      {...props}\n    >\n      <HStack justify=\"flex-start\" px=\"2\" py=\"4\">\n        <Logo boxSize=\"8\" />\n        <Text fontWeight=\"bold\" mr=\"auto\">\n          Theme Explorer\n        </Text>\n        <ColorModeSwitcher size=\"sm\" fontSize=\"sm\" />\n      </HStack>\n      <Box p=\"4\" pt=\"2\">\n        {content}\n      </Box>\n    </Box>\n  );\n};\n","import * as React from \"react\";\nimport { Grid, GridProps, useToken } from \"@chakra-ui/react\";\n\nexport type AutoGridProps = GridProps & {\n  minColWidth?: string;\n};\n\nexport const AutoGrid = ({\n  minColWidth = \"xs\",\n  ...gridProps\n}: AutoGridProps) => {\n  const [width] = useToken(\"sizes\", [minColWidth]);\n  return (\n    <Grid\n      gap=\"8\"\n      gridTemplateColumns={`repeat(auto-fill, minmax(${width}, 1fr))`}\n      {...gridProps}\n    />\n  );\n};\n","import {\n  Box,\n  ChakraTheme,\n  Code,\n  Heading,\n  HStack,\n  ListItem,\n  Tooltip,\n  useClipboard,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport * as React from \"react\";\n\nexport type TokenItemProps = {\n  token: string;\n  value: string;\n  theme: ChakraTheme;\n  tokenVisualizer?: (\n    row: Pick<TokenItemProps, \"token\" | \"value\" | \"theme\">\n  ) => React.ReactNode;\n};\n\nexport const TokenItem = ({\n  token,\n  value,\n  theme,\n  tokenVisualizer,\n}: TokenItemProps) => {\n  const bg = useColorModeValue(\"gray.200\", \"gray.700\");\n  const visualizerBg = useColorModeValue(\"white\", \"gray.800\");\n  const { hasCopied, onCopy, value: copiedValue } = useClipboard(token);\n  const copiedLabel = `Copied \"${copiedValue}\"`;\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === \"Enter\") {\n      onCopy();\n    }\n  };\n\n  const tokenVisualization = tokenVisualizer?.({ token, value, theme });\n  const visualization = tokenVisualization ? (\n    <Box bg={visualizerBg} px=\"6\" py=\"6\" flex=\"1\">\n      {tokenVisualization}\n    </Box>\n  ) : null;\n\n  return (\n    <ListItem\n      bg={bg}\n      transition=\"box-shadow 250ms ease-out\"\n      _hover={{ shadow: \"lg\" }}\n      borderRadius=\"md\"\n      shadow=\"md\"\n      overflow=\"hidden\"\n      d=\"flex\"\n      flexDir=\"column\"\n      role=\"button\"\n      onKeyDown={handleKeyDown}\n      onClick={onCopy}\n      tabIndex={0}\n      _focus={{\n        outline: 0,\n        shadow: \"outline\",\n      }}\n    >\n      {visualization}\n      <HStack\n        spacing=\"2\"\n        p=\"6\"\n        py=\"4\"\n        overflowX=\"auto\"\n        align=\"baseline\"\n        flex=\"0 0 auto\"\n      >\n        <Tooltip\n          label={copiedLabel}\n          isOpen={hasCopied}\n          placement=\"bottom-start\"\n        >\n          <Heading size=\"md\" flexBasis=\"8ch\">\n            {token}\n          </Heading>\n        </Tooltip>\n        <Code as=\"pre\" whiteSpace=\"pre-wrap\">\n          {value}\n        </Code>\n      </HStack>\n    </ListItem>\n  );\n};\n","import * as React from \"react\";\nimport { Box, ChakraTheme, List } from \"@chakra-ui/react\";\nimport { AutoGrid } from \"../AutoGrid\";\nimport { TokenItem, TokenItemProps } from \"./TokenItem\";\n\nexport type TokenGridProps = {\n  minColWidth?: string;\n  tokenVisualizer?: TokenItemProps[\"tokenVisualizer\"];\n  tokens: [string, string][];\n  theme: ChakraTheme;\n  description?: React.ReactNode;\n};\n\nexport const TokenGrid: React.FC<TokenGridProps> = ({\n  tokens,\n  theme,\n  tokenVisualizer,\n  minColWidth = \"md\",\n  description,\n}) => {\n  if (!tokens.length) {\n    return null;\n  }\n\n  return (\n    <>\n      {description ? (\n        <Box as=\"aside\" p=\"8\" pb=\"2\">\n          {description}\n        </Box>\n      ) : null}\n      <AutoGrid\n        as={List}\n        px=\"2\"\n        pb=\"2\"\n        gap={[\"2\", \"8\", \"10\"]}\n        minColWidth={minColWidth}\n        mt={[\"4\", \"8\"]}\n      >\n        {tokens.map(([token, value]) => (\n          <TokenItem\n            key={token}\n            token={token}\n            value={value}\n            theme={theme}\n            tokenVisualizer={tokenVisualizer}\n          />\n        ))}\n      </AutoGrid>\n    </>\n  );\n};\n","import * as React from \"react\";\nimport { Box, List, VStack } from \"@chakra-ui/react\";\nimport { AutoGrid } from \"../AutoGrid\";\nimport { TokenGridProps } from \"./TokenGrid\";\nimport { TokenItem } from \"./TokenItem\";\n\nexport const ColorGrid: React.FC<TokenGridProps> = ({\n  tokens,\n  theme,\n  tokenVisualizer,\n  minColWidth = \"md\",\n  description,\n}) => {\n  if (!tokens.length) {\n    return null;\n  }\n\n  const colorSchemes = tokens.reduce(\n    (allColorSchemes, [token, value], index, all) => {\n      const prev = all[index - 1];\n      const [firstTokenPart] = token.split(\".\");\n\n      if (prev?.[0].startsWith(firstTokenPart)) {\n        allColorSchemes[allColorSchemes.length - 1].push([token, value]);\n      } else {\n        allColorSchemes.push([[token, value]]);\n      }\n\n      return allColorSchemes;\n    },\n    [] as [string, string][][]\n  );\n\n  return (\n    <>\n      {description ? (\n        <Box as=\"aside\" p=\"8\">\n          {description}\n        </Box>\n      ) : null}\n      <VStack align=\"stretch\" spacing={[\"8\", \"16\"]} mt={[\"4\", \"8\"]}>\n        {colorSchemes.map((colorScheme, index) => (\n          <AutoGrid\n            as={List}\n            key={index}\n            px=\"2\"\n            pb={[\"2\", \"4\"]}\n            gap={[\"4\", \"8\"]}\n            minColWidth={minColWidth}\n          >\n            {colorScheme.map(([token, value]) => (\n              <TokenItem\n                key={token}\n                token={token}\n                value={value}\n                theme={theme}\n                tokenVisualizer={tokenVisualizer}\n              />\n            ))}\n          </AutoGrid>\n        ))}\n      </VStack>\n    </>\n  );\n};\n","import * as React from \"react\";\nimport { Box, Center, ChakraTheme, Code, Flex, Text } from \"@chakra-ui/react\";\nimport { TokenGridProps } from \"./TokenGrid\";\nimport { get, isObject } from \"@chakra-ui/utils\";\nimport { ColorGrid } from \"./ColorGrid\";\n\nexport function createTokens(value: unknown, maxDepth = 4): [string, string][] {\n  if (!isObject(value) && !Array.isArray(value)) {\n    return [[\"—\", String(value)]];\n  }\n\n  const propertyPaths = extractPropertyPaths(value, maxDepth);\n  return propertyPaths.map((path) => [path, String(get(value, path))]);\n}\n\nfunction extractPropertyPaths(target: unknown, maxDepth = 1) {\n  if ((!isObject(target) && !Array.isArray(target)) || !maxDepth) {\n    return [];\n  }\n\n  return Object.entries(target).reduce((allPropertyPaths, [key, value]) => {\n    if (isObject(value)) {\n      extractPropertyPaths(value, maxDepth - 1).forEach((childKey) =>\n        // e.g. gray.500\n        allPropertyPaths.push(`${key}.${childKey}`)\n      );\n    } else {\n      // e.g. transparent\n      allPropertyPaths.push(key);\n    }\n\n    return allPropertyPaths;\n  }, [] as string[]);\n}\n\nexport type TokenListConfig = Pick<\n  TokenGridProps,\n  \"tokenVisualizer\" | \"description\" | \"minColWidth\"\n> & {\n  TokenListComponent?: React.FC<TokenGridProps>;\n};\n\n/**\n * Add a visualization column to the TokenTable\n */\nexport const tokenListConfig: Partial<\n  Record<keyof ChakraTheme, TokenListConfig>\n> = {\n  fonts: {\n    tokenVisualizer: (row) => (\n      <Box fontFamily={row.value}>\n        Almost before we knew it, we had left the ground.\n      </Box>\n    ),\n    description: (\n      <>\n        Fonts can be applied with the prop <Code>fontFamily</Code> to every\n        chakra component. E.g. <Code>{`<Text fontFamily=\"heading\" />`}</Code>\n      </>\n    ),\n  },\n\n  fontSizes: {\n    minColWidth: \"full\",\n    tokenVisualizer: (row) => (\n      <Box overflow=\"hidden\" maxW=\"calc(100vw - 30rem)\">\n        <Text fontSize={row.value} lineHeight={row.value} isTruncated>\n          Almost before we knew it, we had left the ground.\n        </Text>\n      </Box>\n    ),\n    description: (\n      <>\n        Font Sizes can be applied with the prop <Code>fontSize</Code> to every\n        chakra component. E.g. <Code>{`<Text fontSize=\"lg\" />`}</Code>\n      </>\n    ),\n  },\n\n  fontWeights: {\n    tokenVisualizer: (row) => (\n      <Box overflow=\"hidden\" maxW=\"calc(100vw - 30rem)\">\n        <Text fontWeight={row.value} isTruncated>\n          Almost before we knew it, we had left the ground.\n        </Text>\n      </Box>\n    ),\n    description: (\n      <>\n        Font Weights can be applied with the prop <Code>fontWeight</Code> to\n        every chakra component. E.g. <Code>{`<Text fontWeight=\"bold\" />`}</Code>\n      </>\n    ),\n  },\n\n  letterSpacings: {\n    tokenVisualizer: (row) => (\n      <Box overflow=\"hidden\" maxW=\"calc(100vw - 30rem)\">\n        <Text letterSpacing={row.value} isTruncated>\n          Almost before we knew it, we had left the ground.\n        </Text>\n      </Box>\n    ),\n    description: (\n      <>\n        Letter Spacings can be applied with the prop <Code>letterSpacing</Code>{\" \"}\n        to every chakra component. E.g.{\" \"}\n        <Code>{`<Text letterSpacing=\"wider\" />`}</Code>\n      </>\n    ),\n  },\n\n  lineHeights: {\n    tokenVisualizer: (row) => (\n      <Box overflow=\"hidden\">\n        <Text lineHeight={row.value} maxW=\"sm\">\n          Almost before we knew it, we had left the ground. Almost before we\n          knew it, we had left the ground. Almost before we knew it, we had left\n          the ground. Almost before we knew it, we had left the ground.\n        </Text>\n      </Box>\n    ),\n    description: (\n      <>\n        Line Heights can be applied with the prop <Code>lineHeight</Code> to\n        every chakra component. E.g.{\" \"}\n        <Code>{`<Text lineHeight=\"short\" />`}</Code>\n      </>\n    ),\n  },\n\n  borders: {\n    tokenVisualizer: (row) => <Box h=\"16\" w=\"full\" border={row.value} />,\n  },\n\n  breakpoints: {\n    minColWidth: \"full\",\n    tokenVisualizer: (row) => (\n      <Box fontSize=\"1rem\" width={row.value} h=\"3\" background=\"blue.200\" />\n    ),\n  },\n\n  colors: {\n    TokenListComponent: ColorGrid,\n    minColWidth: \"2xs\",\n    tokenVisualizer: (row) => (\n      <Box\n        background={row.value}\n        h=\"8\"\n        w=\"full\"\n        borderRadius=\"md\"\n        boxShadow=\"sm\"\n      />\n    ),\n  },\n\n  radii: {\n    tokenVisualizer: (row) => (\n      <Box border=\"2px\" borderRadius={row.value} h=\"16\" w=\"full\" />\n    ),\n  },\n\n  sizes: {\n    minColWidth: \"lg\",\n    tokenVisualizer: (row) => (\n      <Box width={row.value} h=\"3\" background=\"blue.200\" />\n    ),\n  },\n\n  space: {\n    minColWidth: \"lg\",\n    tokenVisualizer: (row) => (\n      <Flex>\n        <Box mr={row.value} boxSize=\"3\" background=\"blue.200\" />\n        <Box boxSize=\"3\" background=\"blue.200\" />\n      </Flex>\n    ),\n  },\n\n  shadows: {\n    tokenVisualizer: (row) => <Box shadow={row.value} h=\"16\" w=\"full\" />,\n  },\n\n  transition: {\n    tokenVisualizer: (row) => {\n      if (row.token.startsWith(\"property\")) {\n        return null;\n      }\n\n      const commonProps = {\n        h: \"16\",\n        w: \"full\",\n        bg: \"blue.100\",\n        fontSize: \"xs\",\n        color: \"gray.900\",\n        _hover: { bg: \"blue.900\", color: \"gray.50\" },\n      };\n\n      if (row.token.startsWith(\"easing\")) {\n        return (\n          <Center\n            {...commonProps}\n            transitionTimingFunction={row.value}\n            transitionDuration=\"ultra-slow\"\n          >\n            hover me\n          </Center>\n        );\n      }\n\n      if (row.token.startsWith(\"duration\")) {\n        return (\n          <Center {...commonProps} transitionDuration={row.value}>\n            hover me\n          </Center>\n        );\n      }\n\n      return null;\n    },\n  },\n\n  textStyles: {\n    tokenVisualizer: (row) => {\n      const sx = get(row.theme, `textStyles.${row.token}`);\n      return (\n        <Text sx={sx}>Almost before we knew it, we had left the ground.</Text>\n      );\n    },\n  },\n  layerStyles: {\n    tokenVisualizer: (row) => {\n      const sx = get(row.theme, `layerStyles.${row.token}`);\n      return <Box boxSize=\"16\" sx={sx} />;\n    },\n  },\n};\n\nexport const createCustomTokensMap: Partial<\n  Record<\n    keyof ChakraTheme,\n    (themeValue: any) => ReturnType<typeof createTokens>\n  >\n> = {\n  textStyles: (themeValue: ChakraTheme[\"textStyles\"]) =>\n    themeValue\n      ? Object.entries(themeValue).map(([key, value]) => [\n          key,\n          JSON.stringify(value, null, 2),\n        ])\n      : [],\n\n  layerStyles: (themeValue: ChakraTheme[\"layerStyles\"]) =>\n    themeValue\n      ? Object.entries(themeValue).map(([key, value]) => [\n          key,\n          JSON.stringify(value, null, 2),\n        ])\n      : [],\n\n  styles: (themeValue: ChakraTheme[\"styles\"]) =>\n    themeValue\n      ? Object.entries(themeValue).map(([key, value]) => [\n          key,\n          JSON.stringify(value, null, 2),\n        ])\n      : [],\n};\n","import { Box, ChakraTheme, Heading, VStack } from \"@chakra-ui/react\";\nimport * as React from \"react\";\nimport startCase from \"lodash/startCase\";\nimport { TokenGrid } from \"./TokenGrid\";\nimport { useThemeToExplore } from \"../../providers/ThemeToExploreProvider\";\nimport {\n  createTokens,\n  tokenListConfig,\n  createCustomTokensMap,\n} from \"./configuration\";\n\nexport type ThemeVisualizerProps = {\n  section: keyof ChakraTheme;\n};\n\nexport const ThemeVisualizer: React.FC<ThemeVisualizerProps> = ({\n  section,\n}) => {\n  const theme = useThemeToExplore();\n  const themeValue = theme[section];\n\n  const title = startCase(section);\n  const {\n    tokenVisualizer,\n    minColWidth,\n    description,\n    TokenListComponent = TokenGrid,\n  } = tokenListConfig[section] ?? {\n    tokenVisualizer: undefined,\n    minColWidth: undefined,\n  };\n\n  const tokenCreator = createCustomTokensMap[section] ?? createTokens;\n  const tokens = tokenCreator(themeValue);\n\n  return (\n    <VStack w=\"full\" align=\"stretch\">\n      <Box as=\"header\" pt=\"10\" px=\"8\">\n        <Heading size=\"lg\" fontWeight=\"300\">\n          {title}\n        </Heading>\n      </Box>\n      <Box as=\"section\">\n        <TokenListComponent\n          theme={theme}\n          tokens={tokens}\n          tokenVisualizer={tokenVisualizer}\n          minColWidth={minColWidth}\n          description={description}\n        />\n      </Box>\n    </VStack>\n  );\n};\n","import * as React from \"react\";\nimport { Layout } from \"./Layout\";\nimport { ThemeSidebar } from \"../components/ThemeVisualizer\";\nimport { Box, useColorModeValue } from \"@chakra-ui/react\";\n\nexport type ThemeLayoutProps = {};\nexport const ThemeLayout: React.FC<ThemeLayoutProps> = ({ children }) => {\n  const bg = useColorModeValue(\"gray.50\", \"gray.700\");\n  const contentBg = useColorModeValue(\"gray.100\", \"gray.900\");\n\n  return (\n    <Layout sidebar={<ThemeSidebar />} bg={bg}>\n      <Box\n        as=\"main\"\n        borderRadius=\"md\"\n        bg={contentBg}\n        m=\"2\"\n        flex=\"1\"\n        p=\"2\"\n        overflow=\"hidden\"\n      >\n        {children}\n      </Box>\n    </Layout>\n  );\n};\n","import * as React from \"react\";\nimport { Center, Heading, Button, VStack } from \"@chakra-ui/react\";\nimport { Layout } from \"../layouts\";\nimport { Link } from \"../components/Link\";\n\nexport type NotFoundPageProps = {};\nexport const NotFoundPage: React.FC<NotFoundPageProps> = () => (\n  <Layout>\n    <Center w=\"full\">\n      <VStack spacing=\"8\">\n        <Heading size=\"md\">Page not found</Heading>\n        <Button as={Link} to=\"/\">\n          Go back\n        </Button>\n      </VStack>\n    </Center>\n  </Layout>\n);\n","import * as React from \"react\";\nimport { useRouteMatch } from \"react-router\";\nimport { ChakraTheme } from \"@chakra-ui/react\";\nimport { ThemeVisualizer } from \"../components/ThemeVisualizer\";\nimport { ThemeLayout } from \"../layouts\";\n\nexport type ThemeExplorerRouteProps = {};\n\nexport const ThemeExplorerRoute: React.FC<ThemeExplorerRouteProps> = () => {\n  const match = useRouteMatch<{ section: keyof ChakraTheme }>();\n  const { section } = match.params;\n\n  return (\n    <ThemeLayout>\n      <ThemeVisualizer section={section} />\n    </ThemeLayout>\n  );\n};\n","import { extendTheme } from \"@chakra-ui/react\";\n\nexport const theme = extendTheme({\n  config: {\n    useSystemColorMode: false,\n  },\n  components: {\n    Code: {\n      defaultProps: {\n        variant: \"none\",\n      },\n    },\n    Table: {\n      baseStyle: {\n        caption: {\n          textAlign: \"left\",\n          mt: \"0\",\n        },\n      },\n    },\n  },\n  textStyles: {\n    \"sidebar-title\": {\n      fontSize: \"xs\",\n      fontWeight: \"bold\",\n      my: \"4\",\n      textTransform: \"uppercase\",\n      letterSpacing: \"wider\",\n      \"&:first-of-type\": {\n        mt: \"0\",\n      },\n    },\n    \"sidebar-link\": {\n      fontSize: \"sm\",\n    },\n  },\n});\n","import * as React from \"react\";\n\nexport function useLocalStorage<T>(key: string, initialValue: T) {\n  const [storedValue, setStoredValue] = React.useState(() => {\n    try {\n      const item = globalThis.localStorage?.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.error(error);\n      return initialValue;\n    }\n  });\n\n  const setValue = (value: T) => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      globalThis.localStorage?.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return [storedValue, setValue] as const;\n}\n","export const isBrowser = typeof globalThis.window !== \"undefined\";\n","import * as React from \"react\";\nimport {\n  HashRouter,\n  MemoryRouter,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport { NotFoundPage } from \"./pages/NotFoundPage\";\nimport {\n  IconButton,\n  ButtonProps,\n  ThemeProvider,\n  ChakraProvider,\n  ChakraTheme,\n  useDisclosure,\n  Tooltip,\n  ChakraProviderProps,\n  HStack,\n} from \"@chakra-ui/react\";\nimport NewWindow from \"react-new-window\";\nimport { CacheProvider } from \"@emotion/react\";\nimport createCache from \"@emotion/cache\";\nimport { ThemeExplorerRoute } from \"./pages/ThemeExplorerRoute\";\nimport { ThemeToExploreProvider } from \"./providers/ThemeToExploreProvider\";\nimport { theme as explorerTheme } from \"./theme\";\nimport { useLocalStorage } from \"./hooks/useLocalStorage\";\nimport { isBrowser } from \"./utils/isBrowser\";\nimport { Logo } from \"./components/Logo\";\n\nconst localStoragePrefix = \"chakra-theme-explorer:\";\nconst colorModeKey = `${localStoragePrefix}color-mode`;\n\nconst colorModeManager: ChakraProviderProps[\"colorModeManager\"] = {\n  type: \"localStorage\",\n  get: () => {\n    if (!isBrowser) {\n      return undefined;\n    }\n\n    const raw = isBrowser\n      ? globalThis.localStorage.getItem(colorModeKey)\n      : undefined;\n    if ([\"light\", \"dark\"].includes(String(raw))) {\n      return raw as \"light\" | \"dark\";\n    }\n\n    return undefined;\n  },\n  set: (value) =>\n    isBrowser\n      ? globalThis.localStorage.setItem(colorModeKey, value)\n      : undefined,\n};\n\nexport interface ThemeExplorerProps {\n  theme: ChakraTheme;\n  buttonProps?: ButtonProps;\n}\n\nexport const ThemeExplorer: React.FC<ThemeExplorerProps> = ({\n  theme,\n  buttonProps,\n}) => {\n  const [defaultIsOpen, setDefaultIsOpen] = useLocalStorage(\n    `${localStoragePrefix}OPEN`,\n    false\n  );\n  const { isOpen, onClose, onToggle } = useDisclosure({\n    defaultIsOpen,\n    onOpen: () => setDefaultIsOpen(true),\n    onClose: () => setDefaultIsOpen(false),\n  });\n  const windowRef = React.useRef<NewWindow | null>();\n\n  React.useEffect(() => {\n    const handleUnload = () => {\n      windowRef.current?.release();\n      setDefaultIsOpen(isOpen);\n    };\n    globalThis.addEventListener(\"unload\", handleUnload);\n    return () => {\n      globalThis.removeEventListener(\"unload\", handleUnload);\n    };\n  }, [isOpen, setDefaultIsOpen]);\n\n  React.useEffect(() => () => windowRef.current?.release(), []);\n\n  const label = (isOpen ? \"Close\" : \"Open\") + \" Chakra UI Theme Explorer\";\n\n  return (\n    <ThemeProvider theme={explorerTheme}>\n      <HStack\n        spacing=\"4\"\n        as=\"aside\"\n        position=\"fixed\"\n        bottom=\"0\"\n        right=\"0\"\n        m=\"4\"\n      >\n        <Tooltip label={label}>\n          <IconButton\n            onClick={onToggle}\n            aria-label={label}\n            colorScheme=\"teal\"\n            isRound\n            icon={<Logo />}\n            shadow=\"lg\"\n            willChange=\"transform\"\n            _hover={{\n              shadow: \"xl\",\n              transform: \"translateY(-3px)\",\n            }}\n            {...buttonProps}\n          />\n        </Tooltip>\n      </HStack>\n      {isOpen ? (\n        // @ts-ignore\n        <NewWindow\n          title=\"Chakra UI Theme Explorer\"\n          onUnload={onClose}\n          copyStyles={false}\n          features={\n            {\n              location: false,\n              toolbar: false,\n              status: false,\n              menubar: false,\n              scrollbars: true,\n              resizable: true,\n            } as any\n          }\n          ref={(ref) => {\n            windowRef.current = ref;\n          }}\n        >\n          <Nested theme={theme} windowRef={windowRef} />\n        </NewWindow>\n      ) : null}\n    </ThemeProvider>\n  );\n};\n\ninterface NestedProps {\n  theme: ChakraTheme;\n  windowRef: any;\n}\n\nexport const Nested = ({ theme, windowRef }: NestedProps) => (\n  <CacheProvider\n    value={createCache({\n      key: \"theme-explorer-window\",\n      container: (windowRef.current as any)?.container,\n    })}\n  >\n    <StandaloneThemeExplorer theme={theme} />\n  </CacheProvider>\n);\n\nexport interface StandaloneThemeExplorerProps {\n  theme: ChakraTheme;\n  router?: \"memory\" | \"hash\";\n}\n\nexport const StandaloneThemeExplorer = ({\n  theme,\n  router = \"memory\",\n}: StandaloneThemeExplorerProps) => {\n  const Router: any = router === \"hash\" ? HashRouter : MemoryRouter;\n\n  return (\n    <ChakraProvider theme={explorerTheme} colorModeManager={colorModeManager}>\n      <ThemeToExploreProvider theme={theme}>\n        <Router>\n          <Switch>\n            <Route\n              path=\"/\"\n              exact\n              render={() => <Redirect to=\"/theme/fonts\" />}\n            />\n            <Route\n              path=\"/theme/:section\"\n              exact\n              component={ThemeExplorerRoute}\n            />\n            <Route path=\"*\" component={NotFoundPage} />\n          </Switch>\n        </Router>\n      </ThemeToExploreProvider>\n    </ChakraProvider>\n  );\n};\n"],"names":["Layout","sidebar","children","boxProps","React","Flex","pos","align","minH","flex","w","overflow","Link","props","ChakraLink","as","ReactRouterLink","themeToExploreContext","theme","ThemeToExploreProvider","Provider","value","useThemeToExplore","ColorModeSwitcher","useColorMode","toggleColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","IconButton","size","fontSize","variant","color","marginLeft","onClick","icon","Logo","chakra","svg","viewBox","xmlns","className","boxSize","width","height","rx","fill","d","id","x1","x2","y2","gradientUnits","stopColor","offset","ThemeSidebar","bg","headingColor","linkColor","linkHoverBg","linkCurrentBg","sections","Typography","pick","Foundations","Shared","Other","content","Object","entries","map","sectionName","themePartial","items","key","isObject","keys","length","ListItem","textStyle","py","px","borderRadius","_hover","sx","fontWeight","to","startCase","filter","Boolean","h4","VStack","List","spacing","Box","maxH","top","overflowY","minW","alignSelf","HStack","justify","Text","mr","p","pt","AutoGrid","minColWidth","gridProps","useToken","Grid","gap","gridTemplateColumns","TokenItem","token","tokenVisualizer","visualizerBg","useClipboard","hasCopied","onCopy","copiedValue","copiedLabel","handleKeyDown","e","tokenVisualization","visualization","transition","shadow","flexDir","role","onKeyDown","tabIndex","_focus","outline","overflowX","Tooltip","label","isOpen","placement","Heading","flexBasis","Code","whiteSpace","TokenGrid","tokens","description","pb","mt","ColorGrid","colorSchemes","reduce","allColorSchemes","index","all","prev","split","firstTokenPart","startsWith","push","colorScheme","createTokens","maxDepth","Array","isArray","String","propertyPaths","extractPropertyPaths","path","get","target","allPropertyPaths","forEach","childKey","tokenListConfig","fonts","row","fontFamily","fontSizes","maxW","lineHeight","isTruncated","fontWeights","letterSpacings","letterSpacing","lineHeights","borders","h","border","breakpoints","background","colors","TokenListComponent","boxShadow","radii","sizes","space","shadows","commonProps","Center","transitionTimingFunction","transitionDuration","textStyles","layerStyles","createCustomTokensMap","themeValue","JSON","stringify","styles","ThemeVisualizer","section","title","undefined","tokenCreator","ThemeLayout","contentBg","m","NotFoundPage","Button","ThemeExplorerRoute","match","useRouteMatch","params","extendTheme","config","useSystemColorMode","components","defaultProps","Table","baseStyle","caption","textAlign","my","textTransform","useLocalStorage","initialValue","item","globalThis","localStorage","getItem","parse","error","console","storedValue","setStoredValue","setValue","valueToStore","Function","setItem","isBrowser","window","localStoragePrefix","colorModeKey","colorModeManager","type","raw","includes","set","ThemeExplorer","buttonProps","defaultIsOpen","setDefaultIsOpen","useDisclosure","onOpen","onClose","onToggle","windowRef","handleUnload","current","release","addEventListener","removeEventListener","ThemeProvider","explorerTheme","position","bottom","right","isRound","willChange","transform","NewWindow","onUnload","copyStyles","features","location","toolbar","status","menubar","scrollbars","resizable","ref","Nested","CacheProvider","createCache","container","StandaloneThemeExplorer","router","Router","HashRouter","MemoryRouter","ChakraProvider","Switch","Route","exact","render","Redirect","component"],"mappings":"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"}